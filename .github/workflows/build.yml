# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      clickhouse:
        # Docker Hub image
        image: flexberry/clickhouse-official
        ports:
          # Maps tcp port 9000 and 8123 on service container to the host
          - 18123:8123
          - 19000:9000

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: NuGet Restore
        run: nuget restore "NewPlatform.Flexberry.ORM.ClickHouseDataService.sln" -NonInteractive

      - name: Compile code
        run: msbuild /p:Configuration=Debug "NewPlatform.Flexberry.ORM.ClickHouseDataService.sln"

      - name: Install xunit.runner.console
        run: nuget install xunit.runner.console -Version 2.4.1 -OutputDirectory testrunner

      - name: Test under dotnet
        run: dotnet test ./Tests/NewPlatform.Flexberry.ORM.ClickHouseDataService.Tests/bin/Debug/netcoreapp3.1/NewPlatform.Flexberry.ORM.ClickHouseDataService.Tests.dll

      - name: Test under mono
        run: mono ./testrunner/xunit.runner.console.2.4.1/tools/net461/xunit.console.exe ./Tests/NewPlatform.Flexberry.ORM.ClickHouseDataService.Tests/bin/Debug/net461/NewPlatform.Flexberry.ORM.ClickHouseDataService.Tests.dll
